name: Deploy to EKS

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Do you want to deploy?'
        required: true
        default: 'no'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirmation == 'yes'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List Repository Contents
        run: ls -R

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      - name: Create EKS Cluster
        run: |
          eksctl create cluster --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }} --nodegroup-name linux-nodes --node-type t2.micro --nodes 2 --nodes-min 1 --nodes-max 3 --managed

      - name: Configure kubectl
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Check if Docker image exists in ECR
        id: check-ecr-image
        run: |
          aws ecr describe-images --repository-name webapp --image-ids imageTag=latest --region ${{ secrets.AWS_REGION }} > /dev/null 2>&1
          echo "::set-output name=image_exists::$(test $? -eq 0)"

      - name: Login to Amazon ECR
        if: steps.check-ecr-image.outputs.image_exists != '0'
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy to EKS
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          kubectl apply -f mywebsite/deployment.yml
          kubectl apply -f mywebsite/service.yml

          kubectl apply -f mywebsite/service.yml
